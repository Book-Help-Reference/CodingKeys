{"name":"CodingKeys","tagline":"Unified keyboard shortcuts for your development tools","body":"CodingKeys\r\n==========\r\n\r\n![CodingKeys](https://github.com/fe9lix/CodingKeys/blob/gh-pages/images/codingkeys-statusbar.png?raw=true)\r\n\r\n![CodingKeys](https://github.com/fe9lix/CodingKeys/blob/gh-pages/images/codingkeys-menu.png?raw=true)\r\n\r\n### What problem does it solve?\r\n\r\nNowadays, developers often work in several different development environments and text editors. \r\nFor example, you may need Eclipse for regular Java development, Android Studio for Android development, \r\nXcode for iOS development, Visual Studio for C#, Sublime Text for web development, etc..\r\nEvery tool, however, has different keyboard shortcuts. Since it is hard to remember all shortcuts, \r\nthere's a constant loss of productivity when switching tools. If you don't want to edit all shortcut\r\nsets in every tool, you can instead use CodingKeys as an \"abstraction layer\". \r\n\r\nCodingKeys lets you define unified shortcuts, which are dynamically re-mapped to existing shortcuts of \r\nother applications when you switch tools. All mappings can be conveniently edited in a single configuration \r\nfile. The config file also gives you a nice overview over all shortcuts and grows as you add new apps to \r\nyour coding toolbox.\r\n\r\n### How it works\r\n\r\nCodingKeys dynamically registers keyboard shortcuts when one of the defined applications is activated \r\n(and unregisters the shortcuts when the application is deactivated). It then generates keyboard \r\nevents based on the mappings defined in a configuration file and sends those events to the active \r\napplication. \r\n\r\n### Installation\r\nCodingKeys runs on OSX (tested on OSX 10.8). Download the [latest release](https://github.com/fe9lix/CodingKeys/releases/latest). \r\n\r\nUnzip the file and copy the .app file into your program folder. \r\nWhen you start the app, an icon should appear in the status bar.\r\n\r\n**Important Note**: Please make a backup of your key file before you install an updated version.\r\n(The mapping file is currently contained in the application package.)\r\n\r\n### How to use it\r\n\r\nCodingKeys runs in the status bar (small keyboard icon with a \"C\" symbol) and currently has four menu \r\noptions: `Launch At Startup`, `Key Mappings`, `Help` and `Quit`. All options except `Key Mappings`\r\n(see separate section) should be self-explanatory. \r\n\r\n### Editing Key Mappings\r\n\r\nSelecting `Key Mappings` from the menu opens the configuration JSON file in your default text editor. \r\nEach mapping has the following fields: \r\n\r\n- command: The name of the command\r\n- key: The shortcut for the command\r\n- mapping: Each application and its corresponding shortcut\r\n\r\n#### Command\r\nThis name is just for your own information.\r\n\r\n#### Key\r\nThe unified shortcut, consisting of unicode symbols, separated by spaces. \r\nYou can add modifiers such as `⌃` (Control), `⌥` (Option), `⌘` (Command), `⇧` (Shift) and special keys,\r\nsuch as `↑` (Arrow Up) or `↓` (Arrow Down). The full list of available options is shown at the end of this \r\nfile. See the exisiting key file for some examples and combinations.\r\n\r\n#### Mapping\r\nThe mapping part lists each application you want to support and the corresponding shortcuts. Use the name \r\ndisplayed in the title bar of the application. This name is used to find the active application and the \r\nmappings that should be registered.\r\n\r\n#### Shortcut Sequences\r\nYou can map a shortcut to a sequence of multiple keys. For example, in Xcode there is no default shortcut\r\nto duplicate a line. However, pressing a sequence of five different key combinations in succession \r\nachieves the same effect. Each part of a sequence must be separated by a `|` (pipe). The sequence for the \r\n`duplicate line command` in Xcode is:  \r\n`⌃ A | ⇧ ↓ | ⌘ C | ⌘ V | ⌘ V`\r\n\r\nWhen CodingKeys sees pipes, it fires those key combinations one after the other. That way, you might also \r\nwant to add other shortcuts that trigger useful sequences (although I haven't found use cases beyond\r\nXcode yet...).\r\n\r\n#### Saving Changes\r\nWhenever you save the file, the mappings are automatically reloaded and should immediately take effect.\r\nPlease make sure to use correct JSON syntax. The app currently handles errors poorly, \r\nso chances are the app won't start or crash if there are errors in this file. If something goes wrong, \r\nmake sure to copy your mappings and then re-install the app.\r\n\r\n#### Default Mappings\r\nThe default key file contains mappings for some commands of Eclipse, Android Studio, Xcode and Sublime Text. \r\nYou might need to change some of the mappings for Xcode (Move Line Up, Move Line Down) or add non-existing\r\nshortcuts (for example, renaming has no default shortcut in Xcode).\r\n\r\n| Command | Key | Android Studio | Eclipse | Sublime Text | Xcode |\r\n| ----- | ----- | ----- | ----- | ----- | ----- |\r\n| **Move Line Up** | **`⌃ ⌥ ↑`** | ⇧ ⌥ ↑ | ⌥ ↑ | ⌃ ⌘ ↑ | ⌃ ⌥ ↑ |\r\n| **Move Line Down** | **`⌃ ⌥ ↓`** | ⇧ ⌥ ↓ | ⌥ ↓ | ⌃ ⌘ ↓ | ⌃ ⌥ ↓ |\r\n| **Duplicate Line** | **`⌘ D`** | ⌘ D | ⌥ ⌘ ↓ | ⇧ ⌘ D | ⌃ A &#124; ⇧ ↓ &#124; ⌘ C &#124; ⌘ V &#124; ⌘ V |\r\n| **Delete Line** | **`⌘ ⌫`** | ⌘ ⌫ | ⌘ D | ⌃ ⇧ K | ⌃ A &#124; ⌃ K &#124; ⌃ K |\r\n| **Format** | **`⇧ ⌘ F`** | ⌥ ⌘ L | ⇧ ⌘ F | ⌃ ⇧ R | ⌃ I |\r\n| **Rename** | **`⌃ ⌘ R`** | ⇧ F6 | ⌥ ⌘ R | ⌃ ⌘ G | ⌃ ⌥ R |\r\n| **Toggle Comment** | **`⌘ ⇧ 7`** | ⌘ / | ⌘ 7 | ⌘ / | ⌘ / |\r\n| **Quick Open** | **`⇧ ⌘ O`** | ⌘ O | ⇧ ⌘ T | ⌘ P | ⇧ ⌘ O |\r\n| **Run** | **`⌘ R`** | ⌃ R | ⇧ ⌘ F11 | ⌘ B | ⌘ R |\r\n\r\n#### Share Your Mappings\r\nIf you add new commands or tools and want to share them, just open an issue (tag `key file`) and paste your\r\nconfig.\r\n\r\n### Bugs and Features\r\nWorking with key codes is somewhat tricky and non-trivial, so you might discover some combinations or special \r\nkeys that don't work. Please open an issue and describe the problem or just fix the issue yourself :) and \r\nsend a pull request.\r\n\r\n### Symbols\r\n`↩` Return  \r\n`⇥` Tab  \r\n`⎵` Space  \r\n`⌫` Delete  \r\n`⎋` Escape  \r\n`⌘` Command  \r\n`⇧` Shift  \r\n`⇪` CapsLock  \r\n`⌥` Option  \r\n`⌃` Control  \r\n`⇧` RightShift  \r\n`⌥` RightOption  \r\n`⌃` RightControl  \r\n`\\Ud83d\\Udd0a` VolumeUp  \r\n`\\Ud83d\\Udd08` VolumeDown  \r\n`\\Ud83d\\Udd07` Mute  \r\n`F1`  \r\n`F2`  \r\n`F3`  \r\n`F4`  \r\n`F5`  \r\n`F6`  \r\n`F7`  \r\n`F8`  \r\n`F9`  \r\n`F10`  \r\n`F11`  \r\n`F12`  \r\n`F13`  \r\n`F14`  \r\n`F15`  \r\n`F16`  \r\n`F17`  \r\n`F18`  \r\n`F19`  \r\n`F20`  \r\n`⌦` ForwardDelete  \r\n`↖` Home  \r\n`↘` End  \r\n`⇞` PageUp  \r\n`⇟` PageDown  \r\n`←` LeftArrow  \r\n`→` RightArrow  \r\n`↓` DownArrow  \r\n`↑` UpArrow  \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}